// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc862.glitch.commands;
import edu.wpi.first.wpilibj.command.Command;
import org.usfirst.frc862.glitch.Constants;
import org.usfirst.frc862.glitch.Robot;

/**
 *
 */
public class CoPilotManual extends Command {

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_DECLARATIONS
 
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_DECLARATIONS

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR
    public CoPilotManual() {

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_SETTING

        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_SETTING
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
        requires(Robot.lift);

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
        requires(Robot.gripper);
    }

    // Called just before this Command runs the first time
    @Override
    protected void initialize() {
        Robot.lift.setManualPosition();
    }

    // Called repeatedly when this Command is scheduled to run
    @Override
    protected void execute() {
        double collectorPower = Robot.oi.copilot.getLeftTrigger() - Robot.oi.copilot.getRightTrigger();
        if (Math.abs(collectorPower) < Constants.COLLECT_TRIGGER_DEADZONE) {
            collectorPower = 0;
        }

        if (Robot.oi.copilot.leftBumper.get()) {
            collectorPower = Constants.DEFAULT_COLLECT_POWER;
        }
        else if(Robot.oi.copilot.rightBumper.get()) {
            collectorPower = Constants.DEFAULT_EJECT_POWER;
        }
        Robot.gripper.setPower(collectorPower);

        double elevatorPower = Robot.oi.copilot.getLeftStickY();
        Robot.lift.setElevatorPower(elevatorPower + Constants.ELEVATOR_HOLD_POWER);

        double fourbarPower = Robot.oi.copilot.getRightStickY();
        Robot.lift.setFourbarPower(fourbarPower + Constants.FOURBAR_HOLD_POWER);
    }

    // Make this return true when this Command no longer needs to run execute()
    @Override
    protected boolean isFinished() {
        return false;
    }

    // Called once after isFinished returns true
    @Override
    protected void end() {
        Robot.lift.exitManualPosition();
    }
}
